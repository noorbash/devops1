name: API Deploy to EKS

on:
  push:
    branches:
      - main
      - devops  # Change if your default branch is different
  workflow_dispatch:  # Allow manual triggers

env:
  AWS_REGION: us-east-1   # Change to your EKS region
  EKS_CLUSTER_NAME: my-eks-cluster  # Change to your EKS cluster name
  ECR_REGISTRY: 001041424912.dkr.ecr.us-east-1.amazonaws.com  # Change to your AWS ECR Registry
  IMAGE_NAME: my-image-api
  IMAGE_TAG: latest
  HELM_RELEASE_NAME: image-api
  HELM_NAMESPACE: image-api-ns  # Change to your desired namespace

jobs:
  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and Push Docker Image
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

  deploy-to-eks:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensures the image is built before deployment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up kubectl
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Deploy with Helm
        run: |
          helm upgrade --install $HELM_RELEASE_NAME ./helm-chart \
            --namespace $HELM_NAMESPACE \
            --create-namespace \
            --set image.repository=$ECR_REGISTRY/$IMAGE_NAME \
            --set image.tag=$IMAGE_TAG
